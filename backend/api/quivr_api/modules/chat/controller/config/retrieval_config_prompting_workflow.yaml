workflow_config:
  name: "standard RAG"
  nodes:
    - name: "START"
      conditional_edge:
        routing_function: "routing_split"
        conditions: ["edit_system_prompt", "filter_history"]

    - name: "edit_system_prompt"
      edges: ["filter_history"]

    - name: "filter_history"
      edges: ["dynamic_retrieve"]

    #- name: "rewrite"
    #  edges: ["dynamic_retrieve"]
      #edges: ["retrieve"]

    #- name: "retrieve"
    #  edges: ["generate_rag"]

    #- name: "dynamic_retrieve"
    #  edges: ["generate_rag"]

    - name: "dynamic_retrieve"
      conditional_edge:
        routing_function: "websearch_split"
        conditions: ["tavily_search", "generate_rag"]

    - name: "tavily_search"
      edges: ["generate_rag"]

    - name: "generate_rag" # the name of the last node, from which we want to stream the answer to the user, should always start with "generate"
      edges: ["END"]
# Maximum number of previous conversation iterations
# to include in the context of the answer
max_history: 10

# Number of chunks returned by the retriever
k: 40

max_files: 10

web_search_config:
  supplier: "tavily"

# Reranker configuration
reranker_config:
  # The reranker supplier to use
  supplier: "cohere"

  # The model to use for the reranker for the given supplier
  #model: "rerank-multilingual-v3.0"

  # Number of chunks returned by the reranker
  top_n: 5

  # Among the chunks returned by the reranker, only those with relevance
  # scores equal or above the relevance_score_threshold will be returned
  # to the LLM to generate the answer (allowed values are between 0 and 1,
  # a value of 0.1 works well with the cohere and jina rerankers)
  relevance_score_threshold: 0.1

# LLM configuration
llm_config:

  # Maximum number of tokens to pass to the LLM
  # as a context to generate the answer
  max_context_tokens: 8000

  temperature: 0.7
  streaming: true
